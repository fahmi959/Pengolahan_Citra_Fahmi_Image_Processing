{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Algoritma Djikstra Map Jawa Tengah - Kelompok 3","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMem7Mow+0sLGJlqJq7pQ1r"},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"iZEcAoE6PpeS"},"source":["***NAMA  : FAHMI ARDIANSYAH***\n","\n","***NIM   : 4611420003***\n","\n","***PRODI : TEKNIK INFORMATIKA***\n","\n","\n","---\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":644},"id":"BBNSpfLzMtb5","executionInfo":{"status":"error","timestamp":1638979533371,"user_tz":-420,"elapsed":1559,"user":{"displayName":"34_Fahmi_Ardiansyah_ILKOM","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Ghd0yqUTuj75TrJUBBTHLzbw4FL4hxcuSuZyu8ihQ=s64","userId":"10732984741395579062"}},"outputId":"6f907d34-43b6-4c89-b386-1fdbd82ffad2"},"source":["import networkx as nx\n","import matplotlib.pyplot as plt\n","\n","\n","\n","def shortest(maps, asal, tujuan): # mencari jalur terpendek dari maps (graph yg dibangun)\n","    result = [] # node dengan jarak terpendek simpan ke dalam list\n","    result.append(asal) # inisialisasi node pertama dengan nilai asal\n","    jarak_min = 0\n","\n","    \n","    while tujuan not in result: # telusuri graph sampai tujuan ditemukan\n","        current_node = result[-1] # -1 == list di index terakhir\n","        print (\"Node Terakhir :\",current_node)\n","        \n","        jarak_terpendek = min(maps[current_node].values()) \n","        # Cari local maximum (nilai/jarak terkecil dari node terakhir ke node selanjutnya)\n","        jarak_min = jarak_min + jarak_terpendek\n","       \n","#        print (\"Node Dengan Jarak Terpendek Dari Node Terakhir :|\", jarak_terpendek)\n","                        \n","\n","         \n","        for node, jarak in maps[current_node].items(): # iterasi mencari node selanjutnya\n","            print (\"Node Selanjutnya :\",node,\"| Jarak :\",jarak) \n","            \n","            if jarak == jarak_terpendek: {\n","                 # ambil node dengan jarak terpendek dan tambahkan ke list result\n","                 # agar iterasi selanjutnya dimulai dari node sekarang.\n","                result.append(node) }\n","\n","        print (\"\\n\")\n","        print (\"Simpul yang sudah dilalui :\", result)\n","        print (\"Total Jarak Minimumnya Menjadi :\", jarak_min)\n","        print (\"\\n\")\n","\n","              \n","    return result\n","\n","\n","full_maps = { # graph direpresentasikan dengan menggunakan dictionary di dalam dictionary,\n","        'A': {'B': 4, 'C': 2},\n","        'B': {'D' : 5},\n","        'C': {'B' : 1, 'D': 8 , 'E' : 10},\n","        'D': {'E': 2, 'Z': 6},\n","        'E': {'Z': 3}\n","       }\n","      \n","\n","def draw(maps):\n","    g = nx.DiGraph()\n","    color = []\n","    if (maps == int(0)):\n","        g.add_edge(\"Cirebon\", \"C\", weight=\"2 km\")\n","        g.add_edge(\"Cirebon\", \"B\", weight=\"4 km\")\n","        g.add_edge(\"B\", \"D\", weight=\"5 km\")\n","        g.add_edge(\"B\", \"C\", weight=\"1 km\")\n","        g.add_edge(\"C\", \"D\", weight=\"8 km\")\n","        g.add_edge(\"C\", \"E\", weight=\"10 km\")\n","        g.add_edge(\"E\", \"D\", weight=\"2 km\")\n","        g.add_edge(\"D\", \"Z\", weight=\"6 km\")\n","        g.add_edge(\"E\", \"Z\", weight=\"3 km\")\n","        color = ['g','b','b','b','b','r']\n","    pos = nx.shell_layout(g)\n","    edge_labels = { (u,v): d['weight'] for u,v,d in g.edges(data=True) }\n","    nx.draw_networkx_nodes(g,pos,node_size=1000, node_color=color)\n","    nx.draw_networkx_edges(g,pos)\n","    nx.draw_networkx_labels(g,pos)\n","    nx.draw_networkx_edge_labels(g,pos,edge_labels=edge_labels)\n","    plt.title(\"MAPS\")\n","    plt.axis(\"off\")\n","    plt.show()\n","    \n","def _main():\n","    choose = int (0)\n","    if (choose == 0):\n","        print (\"\\nFull Graf :\")\n","        draw(choose)\n","        maps = shortest(full_maps,\"Cirebon\",\"Z\")\n","        print (\"Jadi Jalur Terpendek Dari 'A' ke 'Z' Adalah :\", maps)\n","       \n","if __name__ == '__main__':\n","    _main()"],"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Full Graf :\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Node Terakhir : Cirebon\n"]},{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-15-d8d81543ef39>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     81\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     82\u001b[0m \u001b[0;32mif\u001b[0m \u001b[0m__name__\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m'__main__'\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 83\u001b[0;31m     \u001b[0m_main\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-15-d8d81543ef39>\u001b[0m in \u001b[0;36m_main\u001b[0;34m()\u001b[0m\n\u001b[1;32m     77\u001b[0m         \u001b[0mprint\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m\"\\nFull Graf :\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     78\u001b[0m         \u001b[0mdraw\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mchoose\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 79\u001b[0;31m         \u001b[0mmaps\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mshortest\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfull_maps\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"Cirebon\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\"Z\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     80\u001b[0m         \u001b[0mprint\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m\"Jadi Jalur Terpendek Dari 'A' ke 'Z' Adalah :\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmaps\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     81\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-15-d8d81543ef39>\u001b[0m in \u001b[0;36mshortest\u001b[0;34m(maps, asal, tujuan)\u001b[0m\n\u001b[1;32m     14\u001b[0m         \u001b[0mprint\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m\"Node Terakhir :\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcurrent_node\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     15\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 16\u001b[0;31m         \u001b[0mjarak_terpendek\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmaps\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mcurrent_node\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvalues\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     17\u001b[0m         \u001b[0;31m# Cari local maximum (nilai/jarak terkecil dari node terakhir ke node selanjutnya)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     18\u001b[0m         \u001b[0mjarak_min\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mjarak_min\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mjarak_terpendek\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: 'Cirebon'"]}]}]}